@model Training4.Models.Training

@{
    ViewBag.Title = "Write a Review";
}

<h2>Write a Review</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @{ string x = "Office (HP, HSP, DALTCP, SDP, OPPS, IO)";}
            @Html.LabelFor(model => model.Office,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Office, new SelectList(new List<Object>{
                "HP", "HSP", "DALTCP","SDP","OPPS","IO"
                }), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 dropdown">
                @Html.DropDownListFor(model => model.Role, new SelectList(new List<Object>{
                "Policy Analyst", "Staff Assistant", "Manager", "Budget Analyst", "Human Resources", "Other"
                }), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{ x = "Date of Course (M/D/Y)";}
            @Html.LabelFor(model => model.Date,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{ x = "Course Title";}
            @Html.LabelFor(model => model.Course,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{ x = "Format (i.e., classroom, online)";}
            @Html.LabelFor(model => model.Format,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Format, new SelectList(new List<Object>{
                "In-Person Classroom", "Webinar", "Phone","Other"
                }), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Format, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{ x = "Duration";}
            @Html.LabelFor(model => model.Time,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{ x = "Link To Enroll";}
            @Html.LabelFor(model => model.Url,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{ x = "Cost";}
            @Html.LabelFor(model => model.Price,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{ x = "CEUs";}
            @Html.LabelFor(model => model.CEU,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CEU, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CEU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contractor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contractor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contractor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Instructor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Instructor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Instructor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{ x = "Location (City, State)";}
            @Html.LabelFor(model => model.Location,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{x = "Star Review (1-5, 5 best)";}
            @Html.LabelFor(model => model.Stars,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Stars, new SelectList(new List<Object>{
                "5", "4", "3","2","1",
                }), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Stars, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @{x = "Written Review (e.g., How did the training help you do your job better? What did you like about the training? What did you find the least informative or needed improvement (if anything)?";}
            @Html.LabelFor(model=>model.Review,x, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Review,10,50, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Review, "", new { @class = "text-danger" })
            </div>
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
